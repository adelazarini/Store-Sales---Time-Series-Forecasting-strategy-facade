{\rtf1\ansi\ansicpg1252\cocoartf2821
\cocoatextscaling0\cocoaplatform0{\fonttbl\f0\fswiss\fcharset0 Helvetica-Bold;\f1\fnil\fcharset0 Menlo-Regular;}
{\colortbl;\red255\green255\blue255;\red24\green25\blue27;\red255\green255\blue255;\red246\green249\blue251;
\red26\green29\blue34;}
{\*\expandedcolortbl;;\cssrgb\c12549\c12941\c14118;\cssrgb\c100000\c100000\c100000;\cssrgb\c97255\c98039\c98824;
\cssrgb\c13333\c15294\c18039;}
\paperw11900\paperh16840\margl1440\margr1440\vieww25840\viewh17600\viewkind0
\deftab720
\pard\pardeftab720\partightenfactor0

\f0\b\fs48 \cf2 \cb3 \expnd0\expndtw0\kerning0
Andr\'e9 Lazarini - RA: 1542613\
\
Store Sales - Time Series Forecasting\
\
https://www.kaggle.com/code/ruhaniarora27/store-sales\
\pard\pardeftab720\partightenfactor0

\f1\b0\fs24 \cf4 \cb5 \
\
Previs\'e3o de Vendas de Lojas - Refatora\'e7\'e3o com Padr\'f5es de Projeto\
----------------------------------------------------------------\
\
Este projeto cont\'e9m uma vers\'e3o refatorada do c\'f3digo do notebook "Store Sales" do Kaggle. O objetivo da refatora\'e7\'e3o \'e9 melhorar a estrutura e extensibilidade do c\'f3digo aplicando padr\'f5es de projeto apropriados.\
\
Padr\'f5es de Projeto Utilizados:\
1. Strategy\
2. Facade\
\
1. Padr\'e3o Strategy\
------------------\
Prop\'f3sito:\
O padr\'e3o Strategy \'e9 usado para definir uma fam\'edlia de algoritmos intercambi\'e1veis de modelos de previs\'e3o. Ele permite que o modelo seja selecionado e trocado de forma independente do c\'f3digo que o utiliza. Isso torna o c\'f3digo mais flex\'edvel, extens\'edvel e aderente ao princ\'edpio Open-Closed.\
\
Aplica\'e7\'e3o:\
O padr\'e3o Strategy \'e9 aplicado por meio da classe base abstrata ForecastModel e suas subclasses concretas (RandomForestModel, XGBoostModel, LGBMModel).\
\
A classe base define a interface comum para todos os modelos com os m\'e9todos train() e predict(). As subclasses concretas fornecem as implementa\'e7\'f5es espec\'edficas para cada tipo de modelo. \
\
O script principal pode ent\'e3o trabalhar com qualquer ForecastModel sem precisar conhecer o tipo concreto, permitindo f\'e1cil altern\'e2ncia e compara\'e7\'e3o entre modelos.\
\
2. Padr\'e3o Facade\
----------------\
Prop\'f3sito:\
O padr\'e3o Facade \'e9 usado para fornecer uma interface simplificada de alto n\'edvel para o subsistema complexo de carregar dados, pr\'e9-processar, treinar modelos e gerar submiss\'f5es. Ele encapsula a complexidade e torna o processo geral mais f\'e1cil de usar e entender.\
\
Aplica\'e7\'e3o:\
O padr\'e3o Facade \'e9 implementado por meio da classe SalesForecastingFacade. Essa classe fornece m\'e9todos simples para cada etapa principal do processo de previs\'e3o: load_data(), preprocess_data(), train_model(), evaluate_model(), make_submission().\
\
Internamente, esses m\'e9todos lidam com a complexidade de trabalhar com os v\'e1rios arquivos de dados, pipelines de pr\'e9-processamento, hiperpar\'e2metros do modelo, etc.\
\
O script principal ent\'e3o s\'f3 precisa interagir com os m\'e9todos de alto n\'edvel da fachada para executar o processo de ponta a ponta, em vez de precisar entender todos os detalhes do subsistema.\
\
Outras Melhorias:\
- Ader\'eancia ao princ\'edpio DRY extraindo c\'f3digo comum de carregamento e pr\'e9-processamento de dados para m\'e9todos reutiliz\'e1veis.\
- Melhoria na legibilidade atrav\'e9s de melhores nomes de fun\'e7\'f5es/vari\'e1veis e coment\'e1rios explicando as etapas principais.  \
- Aumento da modularidade separando as responsabilidades em diferentes classes e fun\'e7\'f5es.}